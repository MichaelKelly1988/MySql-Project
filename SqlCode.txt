-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema GameStop
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `GameStop` ;

-- -----------------------------------------------------
-- Schema GameStop
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `GameStop` DEFAULT CHARACTER SET utf8 ;
USE `GameStop` ;

-- -----------------------------------------------------
-- Table `GameStop`.`Manager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Manager` (
  `MangerID` VARCHAR(5) NOT NULL,
  `ManName` VARCHAR(20) NULL,
  `ManAddress` VARCHAR(45) NULL,
  `ManContactNo` VARCHAR(15) NULL,
  PRIMARY KEY (`MangerID`),
  UNIQUE INDEX `MangerID_UNIQUE` (`MangerID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`Branch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Branch` (
  `BranchID` VARCHAR(5) NOT NULL,
  `BranchName` VARCHAR(15) NULL,
  `BranchLocation` VARCHAR(45) NULL,
  `Manager_MangerID` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`BranchID`),
  UNIQUE INDEX `BranchID_UNIQUE` (`BranchID` ASC),
  INDEX `fk_Branch_Manager1_idx` (`Manager_MangerID` ASC),
  CONSTRAINT `fk_Branch_Manager1`
    FOREIGN KEY (`Manager_MangerID`)
    REFERENCES `GameStop`.`Manager` (`MangerID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`Promotions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Promotions` (
  `PromotionCode` VARCHAR(5) NOT NULL,
  `StartDate` DATE NULL,
  `EndDate` DATE NULL,
  `DiscountPerCent` DECIMAL NULL,
  `Event` VARCHAR(45) NULL,
  `Branch_BranchID` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`PromotionCode`),
  UNIQUE INDEX `PromotionCode_UNIQUE` (`PromotionCode` ASC),
  INDEX `fk_Promotions_Branch1_idx` (`Branch_BranchID` ASC),
  CONSTRAINT `fk_Promotions_Branch1`
    FOREIGN KEY (`Branch_BranchID`)
    REFERENCES `GameStop`.`Branch` (`BranchID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`MerchatSuppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`MerchatSuppliers` (
  `MSupID` VARCHAR(5) NOT NULL,
  `DeliveryDate` DATE NULL,
  `Qunatity` INT NULL,
  `OrderDate` DATE NULL,
  PRIMARY KEY (`MSupID`),
  UNIQUE INDEX `MSupID_UNIQUE` (`MSupID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Customer` (
  `CustomerID` VARCHAR(5) NOT NULL,
  `CustomerName` VARCHAR(25) NULL,
  `CustomerAddress` VARCHAR(45) NULL,
  `CustomerContactNo` VARCHAR(15) NULL,
  PRIMARY KEY (`CustomerID`),
  UNIQUE INDEX `CustomerID_UNIQUE` (`CustomerID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`Purchases`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Purchases` (
  `PurchasesID` VARCHAR(5) NOT NULL,
  `Customer_CustomerID` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`PurchasesID`),
  UNIQUE INDEX `PurchasesID_UNIQUE` (`PurchasesID` ASC),
  INDEX `fk_Purchases_Customer1_idx` (`Customer_CustomerID` ASC),
  CONSTRAINT `fk_Purchases_Customer1`
    FOREIGN KEY (`Customer_CustomerID`)
    REFERENCES `GameStop`.`Customer` (`CustomerID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`Merchandise`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Merchandise` (
  `MerchID` VARCHAR(5) NOT NULL,
  `Qunatity` INT NULL,
  `Price` DECIMAL NULL,
  `Merchat Suppliers_MSupID` VARCHAR(5) NOT NULL,
  `Purchases_PurchasesID` VARCHAR(5) NOT NULL,
  `Promotions_PromotionCode` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`MerchID`),
  UNIQUE INDEX `MerchID_UNIQUE` (`MerchID` ASC),
  INDEX `fk_Merchandise_Merchat Suppliers_idx` (`Merchat Suppliers_MSupID` ASC),
  INDEX `fk_Merchandise_Purchases1_idx` (`Purchases_PurchasesID` ASC),
  INDEX `fk_Merchandise_Promotions1_idx` (`Promotions_PromotionCode` ASC),
  CONSTRAINT `fk_Merchandise_Merchat Suppliers`
    FOREIGN KEY (`Merchat Suppliers_MSupID`)
    REFERENCES `GameStop`.`MerchatSuppliers` (`MSupID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Merchandise_Purchases1`
    FOREIGN KEY (`Purchases_PurchasesID`)
    REFERENCES `GameStop`.`Purchases` (`PurchasesID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Merchandise_Promotions1`
    FOREIGN KEY (`Promotions_PromotionCode`)
    REFERENCES `GameStop`.`Promotions` (`PromotionCode`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`Employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Employee` (
  `EmpNo` VARCHAR(5) NOT NULL,
  `EmpName` VARCHAR(20) NULL,
  `EmpAddress` VARCHAR(45) NULL,
  `EmpContactNo` VARCHAR(15) NULL,
  `Branch_BranchID` VARCHAR(5) NOT NULL,
  `Manager_MangerID` VARCHAR(5) NOT NULL,
  UNIQUE INDEX `EmpNo_UNIQUE` (`EmpNo` ASC),
  INDEX `fk_Employee_Branch1_idx` (`Branch_BranchID` ASC),
  INDEX `fk_Employee_Manager1_idx` (`Manager_MangerID` ASC),
  CONSTRAINT `fk_Employee_Branch1`
    FOREIGN KEY (`Branch_BranchID`)
    REFERENCES `GameStop`.`Branch` (`BranchID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Employee_Manager1`
    FOREIGN KEY (`Manager_MangerID`)
    REFERENCES `GameStop`.`Manager` (`MangerID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`Transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Transaction` (
  `TID` VARCHAR(5) NOT NULL,
  `Date` DATE NULL,
  `Qty` INT NULL,
  `Customer_CustomerID` VARCHAR(5) NOT NULL,
  `Employee_EmpNo` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`TID`),
  UNIQUE INDEX `TID_UNIQUE` (`TID` ASC),
  INDEX `fk_Transaction_Customer1_idx` (`Customer_CustomerID` ASC),
  INDEX `fk_Transaction_Employee1_idx` (`Employee_EmpNo` ASC),
  CONSTRAINT `fk_Transaction_Customer1`
    FOREIGN KEY (`Customer_CustomerID`)
    REFERENCES `GameStop`.`Customer` (`CustomerID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Transaction_Employee1`
    FOREIGN KEY (`Employee_EmpNo`)
    REFERENCES `GameStop`.`Employee` (`EmpNo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`Suppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Suppliers` (
  `SupplierID` VARCHAR(5) NOT NULL,
  `SupplierName` VARCHAR(15) NULL,
  `SupplierAddress` VARCHAR(45) NULL,
  `SupplierContact` VARCHAR(15) NULL,
  PRIMARY KEY (`SupplierID`),
  UNIQUE INDEX `SupplierID_UNIQUE` (`SupplierID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`Games`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Games` (
  `GmeID` VARCHAR(5) NOT NULL,
  `GmeName` VARCHAR(45) NULL,
  `GmeGenre` VARCHAR(15) NULL,
  `GmePrice` DECIMAL(5) NULL,
  `Suppliers_SupplierID` VARCHAR(5) NOT NULL,
  `Transaction_TID` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`GmeID`),
  UNIQUE INDEX `GmeID_UNIQUE` (`GmeID` ASC),
  INDEX `fk_Games_Suppliers1_idx` (`Suppliers_SupplierID` ASC),
  INDEX `fk_Games_Transaction1_idx` (`Transaction_TID` ASC),
  CONSTRAINT `fk_Games_Suppliers1`
    FOREIGN KEY (`Suppliers_SupplierID`)
    REFERENCES `GameStop`.`Suppliers` (`SupplierID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Games_Transaction1`
    FOREIGN KEY (`Transaction_TID`)
    REFERENCES `GameStop`.`Transaction` (`TID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`WishList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`WishList` (
  `WishID` VARCHAR(5) NOT NULL,
  `Customer_CustomerID` VARCHAR(5) NOT NULL,
  `Games_GmeID` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`WishID`),
  UNIQUE INDEX `WishID_UNIQUE` (`WishID` ASC),
  INDEX `fk_WishList_Customer1_idx` (`Customer_CustomerID` ASC),
  INDEX `fk_WishList_Games1_idx` (`Games_GmeID` ASC),
  CONSTRAINT `fk_WishList_Customer1`
    FOREIGN KEY (`Customer_CustomerID`)
    REFERENCES `GameStop`.`Customer` (`CustomerID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_WishList_Games1`
    FOREIGN KEY (`Games_GmeID`)
    REFERENCES `GameStop`.`Games` (`GmeID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`Reviews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Reviews` (
  `ReviewNo` VARCHAR(5) NOT NULL,
  `Games_GmeID` VARCHAR(5) NOT NULL,
  `Customer_CustomerID` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`ReviewNo`),
  UNIQUE INDEX `ReviewNo_UNIQUE` (`ReviewNo` ASC),
  INDEX `fk_Reviews_Games1_idx` (`Games_GmeID` ASC),
  INDEX `fk_Reviews_Customer1_idx` (`Customer_CustomerID` ASC),
  CONSTRAINT `fk_Reviews_Games1`
    FOREIGN KEY (`Games_GmeID`)
    REFERENCES `GameStop`.`Games` (`GmeID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Reviews_Customer1`
    FOREIGN KEY (`Customer_CustomerID`)
    REFERENCES `GameStop`.`Customer` (`CustomerID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameStop`.`TradeIns`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`TradeIns` (
  `GmeID` VARCHAR(5) NOT NULL,
  `PurchasePrice` DECIMAL(5) NULL,
  `SalesPrice` DECIMAL(5) NULL,
  `Conditions` VARCHAR(10) NULL,
  `Games_GmeID` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`GmeID`),
  UNIQUE INDEX `GmeID_UNIQUE` (`GmeID` ASC),
  INDEX `fk_Trade-ins_Games1_idx` (`Games_GmeID` ASC),
  CONSTRAINT `fk_Trade-ins_Games1`
    FOREIGN KEY (`Games_GmeID`)
    REFERENCES `GameStop`.`Games` (`GmeID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `GameStop` ;

-- -----------------------------------------------------
-- Placeholder table for view `GameStop`.`Transaction_Emp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`Transaction_Emp` (`Qty` INT, `TID` INT, `Employee_EmpNo` INT);

-- -----------------------------------------------------
-- Placeholder table for view `GameStop`.`TradeStock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`TradeStock` (`SalesPrice` INT, `Conditions` INT, `GmeID` INT);

-- -----------------------------------------------------
-- Placeholder table for view `GameStop`.`PromStart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`PromStart` (`Event` INT, `StartDate` INT, `EndDate` INT);

-- -----------------------------------------------------
-- Placeholder table for view `GameStop`.`TopSeller`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GameStop`.`TopSeller` (`TID` INT, `Employee_EmpNo` INT);

-- -----------------------------------------------------
-- View `GameStop`.`Transaction_Emp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameStop`.`Transaction_Emp`;
USE `GameStop`;
Create  OR REPLACE View Transaction_Emp As Select Qty,TID,Employee_EmpNo From Transaction;

-- -----------------------------------------------------
-- View `GameStop`.`TradeStock`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameStop`.`TradeStock`;
USE `GameStop`;
Create  OR REPLACE View TradeStock as Select SalesPrice, Conditions, GmeID from TradeIns where Conditions = "Excellent";

-- -----------------------------------------------------
-- View `GameStop`.`PromStart`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameStop`.`PromStart`;
USE `GameStop`;
Create  OR REPLACE View PromStart As Select Event, StartDate, EndDate From Promotions where StartDate = "1/3/2017";


-- -----------------------------------------------------
-- View `GameStop`.`TopSeller`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameStop`.`TopSeller`;
USE `GameStop`;
Create  OR REPLACE View TopSeller As Select TID, Employee_EmpNo From Transaction where Date = "3/1/2017";

CREATE USER 'Emp' IDENTIFIED BY 'Emp123';

GRANT SELECT ON TABLE `GameStop`.* TO 'Emp';
CREATE USER 'Manager' IDENTIFIED BY 'Man123';

GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `GameStop`.* TO 'Manager';
CREATE USER 'Ceo' IDENTIFIED BY 'Ceo123';

GRANT ALL ON `GameStop`.* TO 'Ceo';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `GameStop`.`Manager`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Manager` (`MangerID`, `ManName`, `ManAddress`, `ManContactNo`) VALUES ('M001', 'Martin Ryan', 'Carlow', '4587878');
INSERT INTO `GameStop`.`Manager` (`MangerID`, `ManName`, `ManAddress`, `ManContactNo`) VALUES ('M002', 'Sean Kavanagh', 'Wexford', '4878874');
INSERT INTO `GameStop`.`Manager` (`MangerID`, `ManName`, `ManAddress`, `ManContactNo`) VALUES ('M003', 'Tom', 'Waterford', '7878845');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`Branch`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Branch` (`BranchID`, `BranchName`, `BranchLocation`, `Manager_MangerID`) VALUES ('B001', 'GameStop', 'Wexford', 'M001');
INSERT INTO `GameStop`.`Branch` (`BranchID`, `BranchName`, `BranchLocation`, `Manager_MangerID`) VALUES ('B002', 'GameStop', 'Waterford', 'M002');
INSERT INTO `GameStop`.`Branch` (`BranchID`, `BranchName`, `BranchLocation`, `Manager_MangerID`) VALUES ('B003', 'GameStop', 'Kilkenny', 'M003');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`Promotions`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Promotions` (`PromotionCode`, `StartDate`, `EndDate`, `DiscountPerCent`, `Event`, `Branch_BranchID`) VALUES ('PR001', '2017-03-22', '2017-03-29', 10, 'Crazy Bonanaza', 'B001');
INSERT INTO `GameStop`.`Promotions` (`PromotionCode`, `StartDate`, `EndDate`, `DiscountPerCent`, `Event`, `Branch_BranchID`) VALUES ('PR002', '2017-03-30', '2017-04-06', 20, 'Wild Week', 'B002');
INSERT INTO `GameStop`.`Promotions` (`PromotionCode`, `StartDate`, `EndDate`, `DiscountPerCent`, `Event`, `Branch_BranchID`) VALUES ('PR003', '2017-03-23', '2017-04-08', 15, '2 Week Fest', 'B003');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`MerchatSuppliers`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`MerchatSuppliers` (`MSupID`, `DeliveryDate`, `Qunatity`, `OrderDate`) VALUES ('MS001', '2017-03-19', 50, '2017-03-10');
INSERT INTO `GameStop`.`MerchatSuppliers` (`MSupID`, `DeliveryDate`, `Qunatity`, `OrderDate`) VALUES ('MS002', '2017-03-20', 100, '2017-03-11');
INSERT INTO `GameStop`.`MerchatSuppliers` (`MSupID`, `DeliveryDate`, `Qunatity`, `OrderDate`) VALUES ('MS003', '2017-03-21', 150, '2017-03-12');
INSERT INTO `GameStop`.`MerchatSuppliers` (`MSupID`, `DeliveryDate`, `Qunatity`, `OrderDate`) VALUES ('MS004', '2017-03-22', 60, '2017-03-13');
INSERT INTO `GameStop`.`MerchatSuppliers` (`MSupID`, `DeliveryDate`, `Qunatity`, `OrderDate`) VALUES ('MS005', '2017-03-23', 20, '2017-03-14');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`Customer`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Customer` (`CustomerID`, `CustomerName`, `CustomerAddress`, `CustomerContactNo`) VALUES ('C001', 'Christopher Henesey', 'Kilkenny', '08712345');
INSERT INTO `GameStop`.`Customer` (`CustomerID`, `CustomerName`, `CustomerAddress`, `CustomerContactNo`) VALUES ('C002', 'Michael Kelly', 'Wexford', '08612356');
INSERT INTO `GameStop`.`Customer` (`CustomerID`, `CustomerName`, `CustomerAddress`, `CustomerContactNo`) VALUES ('C003', 'Luke Cullen', 'Galway', '02365478');
INSERT INTO `GameStop`.`Customer` (`CustomerID`, `CustomerName`, `CustomerAddress`, `CustomerContactNo`) VALUES ('C004', 'Peggy Ryan', 'Wexford', '03256984');
INSERT INTO `GameStop`.`Customer` (`CustomerID`, `CustomerName`, `CustomerAddress`, `CustomerContactNo`) VALUES ('C005', 'Mary Murphy', 'Waterford', '01425639');
INSERT INTO `GameStop`.`Customer` (`CustomerID`, `CustomerName`, `CustomerAddress`, `CustomerContactNo`) VALUES ('C006', 'Wayne Mitchell', 'Waterford', '02546895');
INSERT INTO `GameStop`.`Customer` (`CustomerID`, `CustomerName`, `CustomerAddress`, `CustomerContactNo`) VALUES ('C007', 'Donna Watson', 'Wexford', '03658755');
INSERT INTO `GameStop`.`Customer` (`CustomerID`, `CustomerName`, `CustomerAddress`, `CustomerContactNo`) VALUES ('C008', 'Sandra Martinez', 'Kilkenny', '21548554');
INSERT INTO `GameStop`.`Customer` (`CustomerID`, `CustomerName`, `CustomerAddress`, `CustomerContactNo`) VALUES ('C009', 'Jesse Bryant', 'Wexford', '48755896');
INSERT INTO `GameStop`.`Customer` (`CustomerID`, `CustomerName`, `CustomerAddress`, `CustomerContactNo`) VALUES ('C010', 'Patrick Russell', 'Dublin', '45788775');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`Purchases`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Purchases` (`PurchasesID`, `Customer_CustomerID`) VALUES ('P001', 'C001');
INSERT INTO `GameStop`.`Purchases` (`PurchasesID`, `Customer_CustomerID`) VALUES ('P002', 'C002');
INSERT INTO `GameStop`.`Purchases` (`PurchasesID`, `Customer_CustomerID`) VALUES ('P003', 'C004');
INSERT INTO `GameStop`.`Purchases` (`PurchasesID`, `Customer_CustomerID`) VALUES ('P004', 'C003');
INSERT INTO `GameStop`.`Purchases` (`PurchasesID`, `Customer_CustomerID`) VALUES ('P005', 'C005');
INSERT INTO `GameStop`.`Purchases` (`PurchasesID`, `Customer_CustomerID`) VALUES ('P006', 'C006');
INSERT INTO `GameStop`.`Purchases` (`PurchasesID`, `Customer_CustomerID`) VALUES ('P007', 'C007');
INSERT INTO `GameStop`.`Purchases` (`PurchasesID`, `Customer_CustomerID`) VALUES ('P008', 'C008');
INSERT INTO `GameStop`.`Purchases` (`PurchasesID`, `Customer_CustomerID`) VALUES ('P009', 'C009');
INSERT INTO `GameStop`.`Purchases` (`PurchasesID`, `Customer_CustomerID`) VALUES ('P010', 'C010');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`Merchandise`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Merchandise` (`MerchID`, `Qunatity`, `Price`, `Merchat Suppliers_MSupID`, `Purchases_PurchasesID`, `Promotions_PromotionCode`) VALUES ('Mc001', 50, 19.99, 'MS001', 'P001', 'PR001');
INSERT INTO `GameStop`.`Merchandise` (`MerchID`, `Qunatity`, `Price`, `Merchat Suppliers_MSupID`, `Purchases_PurchasesID`, `Promotions_PromotionCode`) VALUES ('Mc002', 100, 5.00, 'MS002', 'P002', 'PR001');
INSERT INTO `GameStop`.`Merchandise` (`MerchID`, `Qunatity`, `Price`, `Merchat Suppliers_MSupID`, `Purchases_PurchasesID`, `Promotions_PromotionCode`) VALUES ('Mc003', 150, 9.99, 'MS003', 'P003', 'PR001');
INSERT INTO `GameStop`.`Merchandise` (`MerchID`, `Qunatity`, `Price`, `Merchat Suppliers_MSupID`, `Purchases_PurchasesID`, `Promotions_PromotionCode`) VALUES ('Mc004', 60, 29.99, 'MS004', 'P004', 'PR002');
INSERT INTO `GameStop`.`Merchandise` (`MerchID`, `Qunatity`, `Price`, `Merchat Suppliers_MSupID`, `Purchases_PurchasesID`, `Promotions_PromotionCode`) VALUES ('Mc005', 20, 159.99, 'MS005', 'P005', 'PR003');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`Employee`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Employee` (`EmpNo`, `EmpName`, `EmpAddress`, `EmpContactNo`, `Branch_BranchID`, `Manager_MangerID`) VALUES ('E001', 'Nicole Lewis', 'Wexford', '124578', 'B001', 'M002');
INSERT INTO `GameStop`.`Employee` (`EmpNo`, `EmpName`, `EmpAddress`, `EmpContactNo`, `Branch_BranchID`, `Manager_MangerID`) VALUES ('E002', 'Maria Carter', 'Kilkenny', '145487', 'B003', 'M001');
INSERT INTO `GameStop`.`Employee` (`EmpNo`, `EmpName`, `EmpAddress`, `EmpContactNo`, `Branch_BranchID`, `Manager_MangerID`) VALUES ('E003', 'Peter Wright', 'Waterford', '887755', 'B002', 'M003');
INSERT INTO `GameStop`.`Employee` (`EmpNo`, `EmpName`, `EmpAddress`, `EmpContactNo`, `Branch_BranchID`, `Manager_MangerID`) VALUES ('E004', 'Larry Torres', 'Wexford', '745788', 'B001', 'M002');
INSERT INTO `GameStop`.`Employee` (`EmpNo`, `EmpName`, `EmpAddress`, `EmpContactNo`, `Branch_BranchID`, `Manager_MangerID`) VALUES ('E005', 'Paula Roberts', 'Kilkenny', '445566', 'B003', 'M001');
INSERT INTO `GameStop`.`Employee` (`EmpNo`, `EmpName`, `EmpAddress`, `EmpContactNo`, `Branch_BranchID`, `Manager_MangerID`) VALUES ('E006', 'Clarence James', 'Waterford', '663388', 'B002', 'M003');
INSERT INTO `GameStop`.`Employee` (`EmpNo`, `EmpName`, `EmpAddress`, `EmpContactNo`, `Branch_BranchID`, `Manager_MangerID`) VALUES ('E007', 'Diana Adams', 'Wexford', '444466', 'B001', 'M002');
INSERT INTO `GameStop`.`Employee` (`EmpNo`, `EmpName`, `EmpAddress`, `EmpContactNo`, `Branch_BranchID`, `Manager_MangerID`) VALUES ('E008', 'Richard Mitchell', 'Kilkenny', '665588', 'B003', 'M001');
INSERT INTO `GameStop`.`Employee` (`EmpNo`, `EmpName`, `EmpAddress`, `EmpContactNo`, `Branch_BranchID`, `Manager_MangerID`) VALUES ('E009', 'George Edwards', 'Waterford', '546987', 'B002', 'M003');
INSERT INTO `GameStop`.`Employee` (`EmpNo`, `EmpName`, `EmpAddress`, `EmpContactNo`, `Branch_BranchID`, `Manager_MangerID`) VALUES ('E010', 'Lawrence King', 'Wexford', '965478', 'B001', 'M002');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`Transaction`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T001', '2017-03-23', 4, 'C006', 'E001');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T002', '2017-04-24', 6, 'C007', 'E002');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T003', '2017-03-25', 10, 'C008', 'E003');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T004', '2017-03-26', 3, 'C010', 'E004');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T005', '2017-03-27', 2, 'C001', 'E005');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T006', '2017-03-28', 15, 'C003', 'E006');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T007', '2017-03-29', 4, 'C002', 'E007');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T008', '2017-03-30', 6, 'C005', 'E008');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T009', '2017-03-31', 8, 'C004', 'E009');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T010', '2017-04-01', 20, 'C009', 'E010');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T011', '2017-04-02', 3, 'C003', 'E003');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T012', '2017-04-03', 2, 'C006', 'E005');
INSERT INTO `GameStop`.`Transaction` (`TID`, `Date`, `Qty`, `Customer_CustomerID`, `Employee_EmpNo`) VALUES ('T013', '2017-04-04', 15, 'C005', 'E006');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`Suppliers`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Suppliers` (`SupplierID`, `SupplierName`, `SupplierAddress`, `SupplierContact`) VALUES ('S001', 'Xbox', 'Dublin', '457854');
INSERT INTO `GameStop`.`Suppliers` (`SupplierID`, `SupplierName`, `SupplierAddress`, `SupplierContact`) VALUES ('S002', 'Playstation', 'Offaly', '863399');
INSERT INTO `GameStop`.`Suppliers` (`SupplierID`, `SupplierName`, `SupplierAddress`, `SupplierContact`) VALUES ('S003', 'Nintendo', 'Belfast', '444988');
INSERT INTO `GameStop`.`Suppliers` (`SupplierID`, `SupplierName`, `SupplierAddress`, `SupplierContact`) VALUES ('S004', 'PC', 'Dublin', '336699');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`Games`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G001', 'Tetris', 'Puzzle', 20.99, 'S001', 'T001');
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G002', 'Deus ex', 'Action', 59.99, 'S002', 'T002');
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G003', 'Minecraft', 'Puzzle', 39.99, 'S003', 'T003');
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G004', 'Injustice', 'Action', 59.99, 'S004', 'T004');
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G005', 'Black Ops', 'Shooter', 69.99, 'S002', 'T005');
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G006', 'Gta V', 'Action', 69.99, 'S002', 'T006');
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G007', 'Assaisn\'s Creed', 'Action', 69.99, 'S001', 'T007');
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G008', 'Fifa 17', 'Sports', 69.99, 'S003', 'T008');
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G009', 'Metal Gear Solid', 'Action', 59.99, 'S001', 'T009');
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G010', 'Madden NFL', 'Sports', 69.99, 'S004', 'T010');
INSERT INTO `GameStop`.`Games` (`GmeID`, `GmeName`, `GmeGenre`, `GmePrice`, `Suppliers_SupplierID`, `Transaction_TID`) VALUES ('G011', 'Halo Wars', 'Strategy', 20.99, 'S004', 'T011');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`WishList`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`WishList` (`WishID`, `Customer_CustomerID`, `Games_GmeID`) VALUES ('W001', 'C001', 'G004');
INSERT INTO `GameStop`.`WishList` (`WishID`, `Customer_CustomerID`, `Games_GmeID`) VALUES ('W002', 'C003', 'G006');
INSERT INTO `GameStop`.`WishList` (`WishID`, `Customer_CustomerID`, `Games_GmeID`) VALUES ('W003', 'C001', 'G007');
INSERT INTO `GameStop`.`WishList` (`WishID`, `Customer_CustomerID`, `Games_GmeID`) VALUES ('W004', 'C005', 'G009');
INSERT INTO `GameStop`.`WishList` (`WishID`, `Customer_CustomerID`, `Games_GmeID`) VALUES ('W005', 'C002', 'G010');
INSERT INTO `GameStop`.`WishList` (`WishID`, `Customer_CustomerID`, `Games_GmeID`) VALUES ('W006', 'C003', 'G006');
INSERT INTO `GameStop`.`WishList` (`WishID`, `Customer_CustomerID`, `Games_GmeID`) VALUES ('W007', 'C006', 'G007');
INSERT INTO `GameStop`.`WishList` (`WishID`, `Customer_CustomerID`, `Games_GmeID`) VALUES ('W008', 'C001', 'G003');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`Reviews`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`Reviews` (`ReviewNo`, `Games_GmeID`, `Customer_CustomerID`) VALUES ('R001', 'G001', 'C001');
INSERT INTO `GameStop`.`Reviews` (`ReviewNo`, `Games_GmeID`, `Customer_CustomerID`) VALUES ('R002', 'G002', 'C002');
INSERT INTO `GameStop`.`Reviews` (`ReviewNo`, `Games_GmeID`, `Customer_CustomerID`) VALUES ('R003', 'G003', 'C003');
INSERT INTO `GameStop`.`Reviews` (`ReviewNo`, `Games_GmeID`, `Customer_CustomerID`) VALUES ('R004', 'G004', 'C004');
INSERT INTO `GameStop`.`Reviews` (`ReviewNo`, `Games_GmeID`, `Customer_CustomerID`) VALUES ('R005', 'G005', 'C005');
INSERT INTO `GameStop`.`Reviews` (`ReviewNo`, `Games_GmeID`, `Customer_CustomerID`) VALUES ('R006', 'G006', 'C006');
INSERT INTO `GameStop`.`Reviews` (`ReviewNo`, `Games_GmeID`, `Customer_CustomerID`) VALUES ('R007', 'G007', 'C007');
INSERT INTO `GameStop`.`Reviews` (`ReviewNo`, `Games_GmeID`, `Customer_CustomerID`) VALUES ('R008', 'G009', 'C009');
INSERT INTO `GameStop`.`Reviews` (`ReviewNo`, `Games_GmeID`, `Customer_CustomerID`) VALUES ('R009', 'G008', 'C008');
INSERT INTO `GameStop`.`Reviews` (`ReviewNo`, `Games_GmeID`, `Customer_CustomerID`) VALUES ('R010', 'G010', 'C010');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GameStop`.`TradeIns`
-- -----------------------------------------------------
START TRANSACTION;
USE `GameStop`;
INSERT INTO `GameStop`.`TradeIns` (`GmeID`, `PurchasePrice`, `SalesPrice`, `Conditions`, `Games_GmeID`) VALUES ('G001', 7.99, 15.99, 'Good', 'G001');
INSERT INTO `GameStop`.`TradeIns` (`GmeID`, `PurchasePrice`, `SalesPrice`, `Conditions`, `Games_GmeID`) VALUES ('G002', 10.99, 20.99, 'Good', 'G002');
INSERT INTO `GameStop`.`TradeIns` (`GmeID`, `PurchasePrice`, `SalesPrice`, `Conditions`, `Games_GmeID`) VALUES ('G003', 10.99, 20.99, 'Good', 'G003');
INSERT INTO `GameStop`.`TradeIns` (`GmeID`, `PurchasePrice`, `SalesPrice`, `Conditions`, `Games_GmeID`) VALUES ('G004', 5.99, 20.99, 'Playable', 'G004');
INSERT INTO `GameStop`.`TradeIns` (`GmeID`, `PurchasePrice`, `SalesPrice`, `Conditions`, `Games_GmeID`) VALUES ('G005', 10.99, 20.99, 'Playable', 'G005');
INSERT INTO `GameStop`.`TradeIns` (`GmeID`, `PurchasePrice`, `SalesPrice`, `Conditions`, `Games_GmeID`) VALUES ('G006', 10.99, 20.99, 'Good', 'G006');
INSERT INTO `GameStop`.`TradeIns` (`GmeID`, `PurchasePrice`, `SalesPrice`, `Conditions`, `Games_GmeID`) VALUES ('G007', 10.99, 20.99, 'Good', 'G007');
INSERT INTO `GameStop`.`TradeIns` (`GmeID`, `PurchasePrice`, `SalesPrice`, `Conditions`, `Games_GmeID`) VALUES ('G008', 15.99, 30.99, 'Excellent', 'G008');

COMMIT;

-- begin attached script 'script'

Select Min(GmePrice) as LowestPricedGame from Games;

SELECT Employee_EmpNo as EmployeeOfTheMonth
FROM  Transaction
WHERE Qty= 
				(SELECT MAX(Qty) 
				FROM  transaction);
                
SELECT customername as CustomerFromGalway FROM Customer
WHERE  CUSTOMERADDRESS like '%wex%';

SELECT GMENAME as DearestGames
FROM  games
WHERE GMEPRICE= 
				(SELECT MAX(GmePrice) 
				FROM  games);
                
SELECT COUNT(Customer_CustomerID) AS OrdersFromCustomerc006 FROM transaction
WHERE Customer_CustomerID='C006';

SELECT AVG(QTY) as AverageItemsSold 
FROM Transaction;

select p.PromotionCode as Promotion_Code , p.Event as Promotional_Eent,m.MerchID as Merchandise_ID,
t.PurchasesID, c.CustomerID
from promotions p inner join merchandise m
on p.PromotionCode = m.Promotions_PromotionCode
inner join purchases t
on m.Purchases_PurchasesID = t.PurchasesID
inner join customer c
on t.Customer_CustomerID = c.CustomerID 
ORDER BY c.CustomerID;

select GmeID, GmeName as Games_To_Be_Put_Away from games g
right outer join wishlist fp
on g.GmeID = fp.Games_GmeID;

SELECT GmeID as ID,GMEName as Games_In_Good_or_Excellent_Condition
FROM  Games 
WHERE GmeID  IN 	(SELECT  GmeID
FROM  tradeins
WHERE Conditions='Good' OR Conditions='Excellent');


SELECT branch.branchID, branch.BranchLocation,count(employee.EmpNo) AS NumberOfEmployees 
FROM employee
LEFT JOIN branch
ON employee.Branch_BranchID=branch.BranchID
GROUP BY BranchID;
-- end attached script 'script'
